{"version":3,"file":"static/js/96.3d223cf4.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage.module.css?6661","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/MovieDetailsPage.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// extracted by mini-css-extract-plugin\nexport default {\"allMainInfoDiv\":\"MovieDetailsPage_allMainInfoDiv__Io-fP\",\"infoDiv\":\"MovieDetailsPage_infoDiv__bc-le\",\"genresList\":\"MovieDetailsPage_genresList__VJMdb\",\"genresItem\":\"MovieDetailsPage_genresItem__P+TDq\"};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React from 'react'\r\nimport api from 'API/Api';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport styles from \"../components/MovieDetailsPage.module.css\";\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport default function MovieDetailsPage() {\r\n    const [clicked, setClicked] = useState();\r\n    const [credits, setCredits] = useState();\r\n    const [review, setReview] = useState();\r\n    const [castClick, setCastClick] = useState(false);\r\n    const [reviewClick, setReviewClick] = useState(false);\r\n\r\n\r\n\r\n    const urlId = useParams();\r\n    const backNavigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchbyId();\r\n        fetchbyCredits();\r\n        fetchbyReview();\r\n    }, [])\r\n    \r\n    const fetchbyId = async () => {\r\n        try {\r\n            const searchMovies = await api.fetchFromLinkClick(urlId.id);\r\n            setClicked(searchMovies.data);\r\n        } catch (error) {\r\n            alert(\"There is no information about this movie currently\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchbyCredits = async () => {\r\n        try {\r\n            const credit = await api.fetchCredits(urlId.id);\r\n            setCredits(credit.data.cast);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchbyReview = async () => {\r\n        try {\r\n            const rev = await api.fetchReview(urlId.id);\r\n            setReview(rev.data.results);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleCastClick = async () => {\r\n        setCastClick(true);\r\n        setReviewClick(false);\r\n    }\r\n\r\n    const handleReviewClick = async () => {\r\n        setReviewClick(true);\r\n        setCastClick(false);\r\n    }\r\n   \r\n    const handleGoBackBtn = () => {\r\n        backNavigate(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleGoBackBtn}>Go back</button>\r\n            {clicked && (\r\n                <>\r\n                    <div className={styles.allMainInfoDiv}>\r\n                        <div className={styles.imageDiv}>\r\n                            <img src={`https://image.tmdb.org/t/p/w200${clicked.poster_path}`} />\r\n                        </div>\r\n                        <div className={styles.infoDiv}>\r\n                <h2>{clicked.title}</h2>\r\n                    <p>User Score: {clicked.vote_average * 10}% </p>\r\n                    <h3>Overview</h3>\r\n                    <p>{clicked.overview}</p>\r\n                    <h4>Genres</h4>\r\n                    <ul className={styles.genresList}>\r\n                                {clicked.genres.map((el) => (\r\n                                    <li key={uuid()} className={styles.generalList}>{el.name}</li>\r\n                        ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <p>Additional information</p>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to={`/movie/${clicked.id}/cast`} onClick={handleCastClick}>Cast</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to={`/movie/${clicked.id}/reviews`} onClick={handleReviewClick}>Reviews</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div>\r\n                        <ul>\r\n                        {castClick && credits.map((el) =>\r\n                    \r\n                                <li key={el.id}>\r\n                                <img src={`https://image.tmdb.org/t/p/w300${el.profile_path}`} alt={`Picture of ${el.name}`}/>\r\n                                <p>{el.name}</p>\r\n                                    <p>{el.character}</p>\r\n                                </li>\r\n                            \r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                        {reviewClick && review.length > 0 && review.map((el) =>\r\n                        <li key={el.id}>\r\n                            <p>Author: {el.author}</p>\r\n                            <p>{el.content}</p>\r\n                           \r\n                            </li>\r\n                            \r\n                            )}\r\n                        </ul>\r\n                        {reviewClick && review.length == 0 && (\r\n                            <p>We don't have reviews for this movie</p>\r\n                        )}\r\n                        \r\n                    </div>\r\n                </>\r\n           )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify","MovieDetailsPage","useState","clicked","setClicked","credits","setCredits","review","setReview","castClick","setCastClick","reviewClick","setReviewClick","urlId","useParams","backNavigate","useNavigate","useEffect","fetchbyId","fetchbyCredits","fetchbyReview","api","id","searchMovies","data","alert","console","log","credit","cast","rev","results","handleCastClick","handleReviewClick","onClick","className","styles","src","poster_path","title","vote_average","overview","genres","map","el","name","to","profile_path","alt","character","author","content"],"sourceRoot":""}